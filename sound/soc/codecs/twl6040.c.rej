--- sound/soc/codecs/twl6040.c	2012-12-31 06:33:44.000000000 +0900
+++ sound/soc/codecs/twl6040.c	2012-11-23 18:12:46.000000000 +0900
@@ -69,16 +69,6 @@
 #define TWL6040_EP_VOL_MASK	0x1E
 #define TWL6040_EP_VOL_SHIFT	1
 
-//LGE_BSP seungdae.goh@lge.com 2012-08-09
-#ifdef CONFIG_MACH_LGE_U2
-#define MAIN_MIC_BIAS_CONTROL  //klaus.hwang@lge.com
-#endif
-#ifdef MAIN_MIC_BIAS_CONTROL
-#define TWL6040_MMICBPD    0x40
-#define TWL6040_MMICBENA     0x10
-#endif
-
-
 struct twl6040_output {
 	u16 active;
 	u16 left_vol;
@@ -136,9 +126,6 @@
 	struct delayed_work hookkey_dwork;
 	int longkey_count;
 	int is_hook_enabled;
-#ifdef CONFIG_MACH_LGE_U2
-	int is_jack_detect_working;
-#endif
 #endif
 };
 
@@ -156,15 +143,15 @@
 	0x60, /* TWL6040_HPPLLCTL	0x07	*/
 	0x00, /* TWL6040_LPPLLCTL	0x08	*/
 	0x4A, /* TWL6040_LPPLLDIV	0x09	*/
-#ifdef MAIN_MIC_BIAS_CONTROL
-	0x44, /* TWL6040_AMICBCTL       0x0A    */
-#else
 	0x54, /* TWL6040_AMICBCTL	0x0A	*/
-#endif
 	0x00, /* TWL6040_DMICBCTL	0x0B	*/
 	0x18, /* TWL6040_MICLCTL	0x0C	- No input selected on Left Mic */
 	0x18, /* TWL6040_MICRCTL	0x0D	- No input selected on Right Mic */
+#if defined(CONFIG_MACH_LGE_U2_P760)
+	0x1B, /* TWL6040_MICGAIN	0x0E	*/  // LGE_CHANGE , 120611 , jimin.oh@lge.com
+#else
 	0x00, /* TWL6040_MICGAIN	0x0E	*/
+#endif
 #if 1  //LGE_D1_BSP_ICS seungdae.goh@lge.com 2012-05-03  "Aux FM Volume"  must be 0
 	0x00, /* TWL6040_LINEGAIN	0x0F	*/
 #else // Ti origi
@@ -445,14 +432,9 @@
 {
 	struct twl6040_data *priv = snd_soc_codec_get_drvdata(codec);
 
-#ifndef CONFIG_MACH_LGE_U2
 	hs_hook_report(codec, 0);
 	priv->longkey_count = 0;
-#endif
 	priv->is_hook_enabled = 0;
-#ifdef CONFIG_MACH_LGE_U2
-	priv->is_jack_detect_working = 0;
-#endif
 
 	twl6040_clear_reg_bit(codec, TWL6040_REG_HKCTL1, TWL6040_HKEN);
 }
@@ -496,9 +478,7 @@
 	/* samin.ryu 111004, delay time is not enough for detecting mic.
 	 * it need more test
 	 */
-#ifndef CONFIG_MACH_LGE_U2
 	msleep(200);
-#endif
 	return is_hookkey_pressed(codec);
 }
 #endif /* CONFIG_SND_OMAP_SOC_LGE_JACK */
@@ -1144,9 +1124,7 @@
 
     mutex_lock(&priv->mutex);
 
-#ifndef CONFIG_MACH_LGE_U2
     cancel_delayed_work_sync(&priv->hookkey_dwork);
-#endif
 
     switch(state)
     {
@@ -1209,20 +1187,16 @@
         state = 0;
     else
     {
-#ifndef CONFIG_MACH_LGE_U2
         hs_mic_bias_enable(codec);
         hs_hook_enable(codec);
-#endif
 
         if (is_without_mic(codec) == 1)
             state = SND_JACK_HEADPHONE;
         else
             state = SND_JACK_HEADSET;
 
-#ifndef CONFIG_MACH_LGE_U2
         hs_hook_disable(codec);
         hs_mic_bias_disable(codec);
-#endif
     }
 	mutex_unlock(&priv->mutex);
 
@@ -1264,22 +1238,10 @@
 	hs_jack->jack = jack;
 	hs_jack->report = report;
 
-#ifdef CONFIG_MACH_LGE_U2
-	//LGE_BSP_S  seungdae.goh@lge.com 2012-09-03  Jack Detect [START_LGE]
-	twl6040_set_reg_bit(codec, TWL6040_REG_HKCTL1, TWL6040_HKEN );
-	twl6040_set_reg_bit(codec, TWL6040_REG_AMICBCTL, (TWL6040_HMICENA | TWL6040_HMICBPD) );
-	msleep(200);
-	//LGE_BSP_E  seungdae.goh@lge.com 2012-09-03  Jack Detect [END_LGE]
-#endif
-
     state = twl6040_hs_jack_report(codec, hs_jack->jack, hs_jack->report);
     set_twl6040_jack_status(codec, hs_jack->jack, hs_jack->report,state);
 
-#ifdef CONFIG_MACH_LGE_U2
-    priv_jack = state;
-#else
     priv_jack = -1;
-#endif
 
     return;
 }
@@ -1306,61 +1268,21 @@
 	struct snd_soc_codec *codec = priv->codec;
 	struct twl6040_jack_data *hs_jack = &priv->hs_jack;
     int state;
-#ifdef CONFIG_MACH_LGE_U2
-    int recheck_cnt;
-#endif
 
     state = twl6040_hs_jack_report(codec, hs_jack->jack, hs_jack->report);
-#ifdef CONFIG_MACH_LGE_U2
-    //LGE_BSP seungdae.goh@lge.com 2012-08-23 [  //adjust delay time for hook detecting in jack unplug case
-    if( state == 0 && ( priv_jack == SND_JACK_HEADSET  || priv_jack == SND_JACK_HEADPHONE ) )
-    {                      
-        hs_plug_interrupt_enable(codec);//LGE_BSP seungdae.goh@lge.com 2012-09-05  move here for catching interrupt ( don't miss INT )
-        printk(KERN_DEBUG">> JACK Removed State is Matched [%d]-> %d hook_n:%d\n",priv_jack, state,   priv->longkey_count );
-       set_twl6040_jack_status(codec, hs_jack->jack, hs_jack->report,state);
-        priv_jack = state;
-        //hs_plug_interrupt_enable(codec);
-        priv->is_jack_detect_working = 0;
-    }
-    else if( ( priv_jack & ( ~ 0x1000 )) ==  state )
-    {
-        hs_plug_interrupt_enable(codec); //LGE_BSP seungdae.goh@lge.com 2012-09-05  move here for catching interrupt ( don't miss INT )
-#else
+
     if(state == priv_jack)
     {
-#endif
         printk(KERN_DEBUG"Headset JACK State is Matched %d\n",state);
         set_twl6040_jack_status(codec, hs_jack->jack, hs_jack->report,state);
-#ifdef CONFIG_MACH_LGE_U2
-        priv_jack = state;
-        priv->is_jack_detect_working = 0;
-#else
         priv_jack = -1;
-#endif
     }
     else
     {
-#ifdef CONFIG_MACH_LGE_U2
-       if( (priv_jack & 0xFF ) ==  state) { //LGE_BSP seungdae.goh@lge.com 2012-09-05  If diff state  make retry 2 time
-            recheck_cnt--;
-        }
-        else { /* Unstable state */
-            recheck_cnt = 5; // ( 5 + 1 ) X  200ms recheck
-            twl6040_set_reg_bit(codec, TWL6040_REG_HKCTL1, TWL6040_HKEN );
-            twl6040_set_reg_bit(codec, TWL6040_REG_AMICBCTL, (TWL6040_HMICENA | TWL6040_HMICBPD) );
-        }
-        wake_lock_timeout(&priv->wake_lock, 2 * HZ); //LGE_BSP seungdae.goh@lge.com 2012-09-05
-
-        printk(KERN_DEBUG"Headset JACK State changed 0x%x -> [%d] : take read [%d] more \n",priv_jack, state, ( recheck_cnt +1 ));
-#endif
         printk(KERN_DEBUG"Headset JACK State is Not Matched %d - %d \n",priv_jack, state);
         cancel_delayed_work_sync(&priv->hookkey_dwork);
         queue_delayed_work(priv->workqueue, &priv->delayed_work, msecs_to_jiffies(200)); 
-#ifdef CONFIG_MACH_LGE_U2
-        priv_jack = ( 0x1000 | state) | ( 0x0F00 & ( recheck_cnt << 8  ));
-#else
         priv_jack = state;
-#endif
     }
 
     return;
@@ -1386,9 +1308,7 @@
 	u8 intid;
 	
 //LGE_START,20120331,myungwon.kim@lge.com, Fast Popup Noise Remove
-#ifndef CONFIG_MACH_LGE_U2
     twl6040_clear_reg_bit(codec, TWL6040_REG_AMICBCTL, TWL6040_HMICENA);
-#endif
 
     printk(KERN_DEBUG"=============================================%s\n",__func__);
 	intid = twl6040_reg_read(twl6040, TWL6040_REG_INTID);
@@ -1398,11 +1318,7 @@
         //When Unplugged, To Reduce POPUP Noise[myungwon.kim]
 //		hs_mic_bias_disable(codec);
 		twl6040_clear_reg_bit(codec, TWL6040_REG_HKCTL1, TWL6040_HKEN);
-#ifdef CONFIG_MACH_LGE_U2
-		twl6040_clear_reg_bit(codec, TWL6040_REG_AMICBCTL,  TWL6040_HMICENA );
-#else
 		twl6040_set_reg_bit(codec, TWL6040_REG_AMICBCTL, TWL6040_HMICBPD);
-#endif
 	}
 
 	hs_plug_interrupt_disable(codec);
@@ -1411,21 +1327,14 @@
 	if ((intid & TWL6040_PLUGINT) || (intid & TWL6040_UNPLUGINT)) {
 #if defined(CONFIG_SND_OMAP_SOC_LGE_JACK)
 		hs_hook_interrupt_disable(codec);
-#ifndef CONFIG_MACH_LGE_U2
 		__cancel_delayed_work(&priv->hookkey_dwork);
 #endif
-#endif
 		wake_lock_timeout(&priv->wake_lock, 2 * HZ);
-#ifndef CONFIG_MACH_LGE_U2
 		queue_delayed_work(priv->workqueue, &priv->delayed_work,
 				   msecs_to_jiffies(200));
-#else
-		priv->is_jack_detect_working = 1; //LGE_BSP seungdae.goh@lge.com 2012-09-03
-		queue_delayed_work(priv->workqueue, &priv->delayed_work,
-				msecs_to_jiffies(20));
-#endif
 	}
-#if defined(CONFIG_SND_OMAP_SOC_LGE_JACK) && !defined(CONFIG_MACH_LGE_U2)
+#if defined(CONFIG_SND_OMAP_SOC_LGE_JACK)
+		
     hs_plug_interrupt_enable(codec);
 #endif
 
@@ -1447,11 +1356,7 @@
 	/* sanghyuk.kwon@lge.com 2011/08/22 If ear-mic is not exist,
 	 * do not send hook event
 	 */
-	if ((hs_jack->jack) && priv->is_hook_enabled
-#ifdef CONFIG_MACH_LGE_U2
-		&& !priv->is_jack_detect_working
-#endif
-            ) {
+	if ((hs_jack->jack) && priv->is_hook_enabled) {
 		 /* ty.lee@lge.com 2010-12-21, for longkey event */
 
 		 wake_lock_timeout(&priv->wake_lock, 2 * HZ); //LGE_D1_BSP_ICS seungdae.goh@lge.com 2012-04-09
@@ -1462,47 +1367,14 @@
 			/* sanghyuk.kwon@lge.com 2011.10.24 wake_lock for
 			 * hook long key
 			 */
-#ifndef CONFIG_MACH_LGE_U2
 #if defined(CONFIG_INPUT_LGE_GKPD)
 			if (gkpd_get_test_mode() == 1)
 				gkpd_write_value(KEY_HOOK);
 #endif
 			hs_hook_report(codec, 1);
 			dev_info(codec->dev, "%s: hook interrupt\n", __func__);
-#else
-                            queue_delayed_work(priv->workqueue, &priv->hookkey_dwork,
-                            msecs_to_jiffies(50));
-                            priv->longkey_count++;
-#endif
-
 		}
-#ifdef CONFIG_MACH_LGE_U2
-		else
-#endif
 		if (is_hookkey_pressed(codec)) {
-#ifdef CONFIG_MACH_LGE_U2
-                        if( priv->longkey_count == 1 ) {
-#if defined(CONFIG_INPUT_LGE_GKPD)
-                                if (gkpd_get_test_mode() == 1)
-                                        gkpd_write_value(KEY_HOOK);
-#endif
-                                hs_hook_report(codec, 1);
-                                printk( KERN_DEBUG"%s: hook: Press key ------>>>>\n", __func__);
-                        }
-                        //LGE_BSP seungdae.goh@lge.com 2012-09-13  prevent key pressed state when 3pole --> 4pole Jack miss detected cas
-                        if( priv->longkey_count > 200 ) {  // 200 * 50ms == 10sec
-                            hs_hook_report(codec, 0);
-                            priv->longkey_count = 0;
-                            printk( KERN_DEBUG"%s: hook: Release key - %d <<<<----- \n", __func__,priv->longkey_count);
-                        }
-                        else {
-                           queue_delayed_work(priv->workqueue,
-                                               &priv->hookkey_dwork,
-                                               msecs_to_jiffies(50));
-                               priv->longkey_count++;
-                       }
-//LGE_BSP seungdae.goh@lge.com 2012-08-23 ]
-#else
 //LGE_START,20120518,myungwon.kim@lge.com, Remove Release Hook Key After 1Sec
 //			if (priv->longkey_count < 15) { /* 1 sec */
 				/* sanghyuk.kwon@lge.com 2011.10.25
@@ -1519,19 +1391,8 @@
 //				priv->longkey_count = 0;
 //				dev_info(codec->dev, "%s: hook: longkey\n", __func__);
 //			}
-#endif
 		}
 		else {
-#ifdef CONFIG_MACH_LGE_U2
-                        if( priv->longkey_count == 1 ) {
-#if defined(CONFIG_INPUT_LGE_GKPD)
-                                if (gkpd_get_test_mode() == 1)
-                                        gkpd_write_value(KEY_HOOK);
-#endif
-                                hs_hook_report(codec, 1);
-                                printk( KERN_DEBUG"%s: hook: Press key ------>>>>\n", __func__);
-                        }
-#endif
 			/* shortkey event */
 			hs_hook_report(codec, 0);
 			priv->longkey_count = 0;
@@ -1539,27 +1400,6 @@
 //LGE_END,20120518,myungwon.kim@lge.com, Remove Release Hook Key After 1Sec
 		}
 	}
-#ifdef CONFIG_MACH_LGE_U2
-    //LGE_BSP seungdae.goh@lge.com 2012-09-03 [
-       else if( (priv->longkey_count > 1 ) && ( !priv->is_hook_enabled || priv->is_jack_detect_working )) {
-            printk(KERN_DEBUG"________longkey_count[%d] hook_key_release send by unpluged\n", priv->longkey_count );
-            wake_lock_timeout(&priv->wake_lock, 2 * HZ);
-
-            if( priv->longkey_count  == 0xFFFF ){
-                hs_hook_report(codec, 0);
-                priv->longkey_count = 0;
-            }
-            else{
-                priv->longkey_count  = 0xFFFF;
-                queue_delayed_work(priv->workqueue, &priv->hookkey_dwork,
-                                msecs_to_jiffies(1000));
-            }
-       }
-       else {
-           priv->longkey_count = 0;
-       }
-    //LGE_BSP seungdae.goh@lge.com 2012-09-03 ]
-#endif
 }
 
 static irqreturn_t twl6040_hookkey_handler(int irq, void *data)
@@ -1567,9 +1407,6 @@
 	struct snd_soc_codec *codec = data;
 	struct twl6040_data *priv = snd_soc_codec_get_drvdata(codec);
 
-#ifdef CONFIG_MACH_LGE_U2
-	wake_lock_timeout(&priv->wake_lock, 2 * HZ); //LGE_D1_BSP_ICS seungdae.goh@lge.com 2012-04-09
-#endif
 	/* LGE_SJIT 2011-12-09 [dojip.kim@lge.com]
 	 * use it instead of 'cancel_delayed_work_sync'
 	 * as it should not be sleepable
@@ -1578,13 +1415,8 @@
 	/* samin.ryu@lge.com 2011/06/10 for hook key disable in earjack
 	 * plug/unplug status, modify 110629
 	 */
-#ifndef CONFIG_MACH_LGE_U2
 	queue_delayed_work(priv->workqueue, &priv->hookkey_dwork,
 			msecs_to_jiffies(100));
-#else
-	queue_delayed_work(priv->workqueue, &priv->hookkey_dwork,
-			msecs_to_jiffies(20));
-#endif
 	priv->longkey_count = 0;
 
 	return IRQ_HANDLED;
@@ -1855,25 +1687,6 @@
 
 //LGE_D1_BSP_ICS_S  seungdae.goh@lge.com 2012-04-24    [START_LGE]
 /* Codec Pre Power On */
-#ifdef CONFIG_MACH_LGE_U2
-static const char *twl6040_earpiece_fir_texts[] = {
-    "Off", "On",
-};
-
-#ifdef MAIN_MIC_BIAS_CONTROL
-static const char *twl6040_main_mic_bias_texts[] = {
-    "Off", "On",
-};
-
-static const struct soc_enum twl6040_main_mic_bias_enum =
-    SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(twl6040_main_mic_bias_texts),
-        twl6040_main_mic_bias_texts);
-#endif
-
-static const struct soc_enum twl6040_earpiece_fir_enum =
-    SOC_ENUM_SINGLE_EXT(ARRAY_SIZE(twl6040_earpiece_fir_texts),
-        twl6040_earpiece_fir_texts);
-#endif
 static const char *twl6040_codec_power_texts[] = {
 	"Off", "On",
 };
@@ -1884,137 +1697,6 @@
 
 static int set_codec_power(struct snd_soc_codec *codec, int pwr_on );
 
-#ifdef CONFIG_MACH_LGE_U2
-#ifdef MAIN_MIC_BIAS_CONTROL
-static int twl6040_main_mic_bias_get_enum(struct snd_kcontrol *kcontrol,
-        struct snd_ctl_elem_value *ucontrol)
-{
-       struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
-       struct twl6040_data *priv = snd_soc_codec_get_drvdata(codec);
-
-    int ret;
-    int value;
-
-       //printk(KERN_DEBUG"=============================================%s\n",__func__);
-#if 0  //LGE_BSP seungdae.goh@lge.com 2012-08-23  use cache
-    ret = twl6040_read_reg_volatile(codec, TWL6040_REG_AMICBCTL);
-    if (ret < 0) {
-        dev_err(codec->dev, "%s: failed to read the twl6040 register\n", __func__);
-        return ret;
-    }
-#else
-         ret = twl6040_read_reg_cache(codec, TWL6040_REG_AMICBCTL);
-#endif
-    value = ret & TWL6040_MMICBENA;
-
-    if(value)
-           ucontrol->value.enumerated.item[0] = 0;
-    else
-           ucontrol->value.enumerated.item[0] = 1;
-
-    return 0;
-}
-static int twl6040_main_mic_bias_put_enum(struct snd_kcontrol *kcontrol,
-        struct snd_ctl_elem_value *ucontrol)
-{
-       struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
-       struct twl6040_data *priv = snd_soc_codec_get_drvdata(codec);
-
-       //printk(KERN_DEBUG"=============================================%s\n",__func__);
-
-       int value = ucontrol->value.enumerated.item[0];
-       unsigned int reg_value;
-       int ret;
-
-#if 0 //LGE_BSP seungdae.goh@lge.com 2012-08-23  use cache
-        ret = twl6040_read_reg_volatile(codec, TWL6040_REG_AMICBCTL);
-        if (ret < 0) {
-            dev_err(codec->dev, "%s: failed to read the twl6040 register\n", __func__);
-            return ret;
-        }
-#else
-         ret = twl6040_read_reg_cache(codec, TWL6040_REG_AMICBCTL);
-#endif
-
-        if(value) {
-            reg_value =  (unsigned int)( ret | TWL6040_MMICBENA );
-
-            ret = twl6040_write(codec, TWL6040_REG_AMICBCTL, reg_value);
-            //printk(KERN_DEBUG"Turn on Main mic bias~~~~~~~~\n");
-        }
-        else {
-            reg_value =  (unsigned int)( ret & ( ~ TWL6040_MMICBENA ) );
-
-            ret = twl6040_write(codec, TWL6040_REG_AMICBCTL, reg_value);
-            //printk(KERN_DEBUG"Turn off Main mic bias_________\n");
-        }
-
-    return ret;
-}
-#endif
-
-static int twl6040_earpiece_fir_get_enum(struct snd_kcontrol *kcontrol,
-        struct snd_ctl_elem_value *ucontrol)
-{
-       struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
-       struct twl6040_data *priv = snd_soc_codec_get_drvdata(codec);
-    
-    int ret;
-    int value; 
-
-#if 0  //LGE_BSP seungdae.goh@lge.com 2012-08-23  use cache
-    ret = twl6040_read_reg_volatile(codec, TWL6040_REG_EARCTL);
-    if (ret < 0) {
-        dev_err(codec->dev, "%s: failed to read the twl6040 register\n", __func__);
-        return ret;
-    }
-#else
-         ret = twl6040_read_reg_cache(codec, TWL6040_REG_EARCTL);
-#endif
-    value = ret & 0x20;
-
-    if(value)
-           ucontrol->value.enumerated.item[0] = 0;
-    else
-           ucontrol->value.enumerated.item[0] = 1;
-    
-    
-    return 0;
-}
-static int twl6040_earpiece_fir_put_enum(struct snd_kcontrol *kcontrol,
-        struct snd_ctl_elem_value *ucontrol)
-{
-       struct snd_soc_codec *codec = snd_kcontrol_chip(kcontrol);
-       struct twl6040_data *priv = snd_soc_codec_get_drvdata(codec);
-       int value = ucontrol->value.enumerated.item[0];
-       unsigned int reg_value;
-       int ret;
-
-#if 0  //LGE_BSP seungdae.goh@lge.com 2012-08-23  use cache
-    if(value)
-        ret = twl6040_clear_reg_bit(codec,TWL6040_REG_EARCTL, 0x20);
-    else
-        ret= twl6040_set_reg_bit(codec,TWL6040_REG_EARCTL, 0x20);
-#else
-         ret = twl6040_read_reg_cache(codec, TWL6040_REG_EARCTL);
-
-        if(value) {
-            reg_value =  (unsigned int)( ret & ( ~ 0x20 )  /*FIR filter enable */ );
-
-            ret = twl6040_write(codec, TWL6040_REG_EARCTL, reg_value);
-            //printk(KERN_DEBUG"Turn on FIR filter ##### \n");
-        }
-        else {
-            reg_value =  (unsigned int)( ret | 0x20  );
-
-            ret = twl6040_write(codec, TWL6040_REG_EARCTL, reg_value);
-            //printk(KERN_DEBUG"Turn off ___ FIR filter____\n");
-        }
-#endif
-    return ret;
-}
-#endif
-
 static int twl6040_codec_power_get_enum(struct snd_kcontrol *kcontrol,
 	struct snd_ctl_elem_value *ucontrol)
 {
@@ -2077,18 +1759,6 @@
 	SOC_ENUM_EXT("TWL Codec Power", twl6040_codec_power_enum,
 		twl6040_codec_power_get_enum,
 		twl6040_codec_power_put_enum),
-#ifdef CONFIG_MACH_LGE_U2
-    SOC_ENUM_EXT("Earpiece FIR Enable",twl6040_earpiece_fir_enum,
-        twl6040_earpiece_fir_get_enum,
-        twl6040_earpiece_fir_put_enum),
-
-#ifdef MAIN_MIC_BIAS_CONTROL
-       SOC_ENUM_EXT("Main MIC bias Enable",twl6040_main_mic_bias_enum,
-          twl6040_main_mic_bias_get_enum,
-          twl6040_main_mic_bias_put_enum),
-#endif
-
-#endif
 };
 
 static const struct snd_soc_dapm_widget twl6040_dapm_widgets[] = {
@@ -2384,9 +2054,7 @@
 
 		/* initialize vdd/vss registers with reg_cache */
 		twl6040_init_vdd_regs(codec);
-#ifdef CONFIG_MACH_LGE_U2
-		cdc_tcxo_set_req_int(CDC_TCXO_CLK3, 1); //LGE_BSP seungdae.goh@lge.com 2012-08-09   for tcxo error  case  defence code
-#endif
+
 		break;
 	case SND_SOC_BIAS_OFF:
 		if (!priv->codec_powered)
