--- drivers/net/wireless/bcmdhd/src/dhd/sys/dhd_linux.c	2012-12-31 06:33:44.000000000 +0900
+++ drivers/net/wireless/bcmdhd/src/dhd/sys/dhd_linux.c	2012-11-23 18:12:32.000000000 +0900
@@ -329,11 +329,7 @@
 extern int net_os_send_hang_message(struct net_device *dev);
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
 struct semaphore dhd_registration_sem;
-/* LGE_UPDATE_S, moon-wifi@lge.com by 2lee, 20120601, Prevent kernel panic while a wifi driver module is loading.*/
-#ifndef CONFIG_COMMON_PATCH
 struct semaphore dhd_chipup_sem;
-#endif
-/* LGE_UPDATE_E, moon-wifi@lge.com by 2lee, 20120601 */
 
 #define DHD_REGISTRATION_TIMEOUT  12000  /* msec : allowed time to finished dhd registration */
 #endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27)) */
@@ -673,8 +669,6 @@
 				dhd_set_packet_filter(1, dhd);
 #endif
 //bill.jung@lge.com - Don't set up filter and Power save mode
-				/* Enable packet filter, only allow unicast packet to send up */
-				dhd_set_packet_filter(1, dhd);
 
 				/* If DTIM skip is set up as default, force it to wake
 				 * each third DTIM for better power savings.  Note that
@@ -704,8 +698,6 @@
 				dhd_set_packet_filter(0, dhd);
 #endif
 //bill.jung@lge.com - Don't set up filter and Power save mode
-				/* disable pkt filter */
-				dhd_set_packet_filter(0, dhd);
 
 				/* restore pre-suspend setting for dtim_skip */
 				bcm_mkiovar("bcn_li_dtim", (char *)&dhd->dtim_skip,
@@ -2744,13 +2736,9 @@
 	osl_detach(osh);
 #if 1 && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
 	up(&dhd_registration_sem);
-/* LGE_UPDATE_S, moon-wifi@lge.com by 2lee, 20120601, Prevent kernel panic while a wifi driver module is loading.*/
-#ifndef CONFIG_COMMON_PATCH
 #if	defined(BCMLXSDMMC)
 	up(&dhd_chipup_sem);
 #endif
-/* LGE_UPDATE_E, moon-wifi@lge.com by 2lee, 20120601 */
-#endif
 #endif 
 }
 
@@ -3263,22 +3251,6 @@
 
 		return dhd_wl_ioctl_cmd(dhd, WLC_SET_PM,
 				&var_int, sizeof(var_int), TRUE, 0);
-//LGE_CHANGE_S, moon-wifi@lge.com by wo0ngs 2012-06-12, BTAMP HT Channel Set		
-#ifdef WLBTAMP
-	}else if(!strcmp(name, "btamp_chan")) {
-		int btamp_chan;
-		int iov_len=0;
-		char iovbuf[128];
-		int ret;
-		
-		btamp_chan = (int)simple_strtol(value, NULL, 0);
-		iov_len = bcm_mkiovar("btamp_chan", (char *)&btamp_chan, 4, iovbuf, sizeof(iovbuf));
-		if ((ret  = dhd_wl_ioctl_cmd(dhd, WLC_SET_VAR, iovbuf, iov_len, TRUE, 0) < 0))
-		DHD_ERROR(("%s btamp_chan=%d set failed code %d\n", __FUNCTION__,btamp_chan, ret));
-		else
-		DHD_ERROR(("%s btamp_chan %d set success\n", __FUNCTION__,btamp_chan));
-#endif
-//LGE_CHANGE_E, moon-wifi@lge.com by wo0ngs 2012-06-12, BTAMP HT Channel Set
 	} else if(!strcmp(name,"cur_etheraddr")) {
 		struct ether_addr ea;
 		char buf[32];
@@ -3306,25 +3278,6 @@
 		}
 		else{
 			memcpy(dhd->mac.octet, (void *)&ea, ETHER_ADDR_LEN);
-#if defined(CONFIG_COMMON_PATCH) && !defined(AP) && defined(WLP2P)
-			/* Check if firmware with WFD support used */
-			if ((strstr(fw_path, "_p2p") != NULL) || (op_mode & WFD_MASK))
-			{
-				struct ether_addr p2p_ea;
-
-				memcpy(&p2p_ea, &dhd->mac, ETHER_ADDR_LEN);
-				ETHER_SET_LOCALADDR(&p2p_ea);
-				iovlen = bcm_mkiovar("p2p_da_override", (char *)&p2p_ea, ETHER_ADDR_LEN, buf, sizeof(buf));
-				if ((ret = dhd_wl_ioctl_cmd(dhd, WLC_SET_VAR, buf, iovlen, TRUE, 0)) < 0)
-				{
-					DHD_ERROR(("%s p2p_da_override ret= %d\n", __FUNCTION__, ret));
-				}
-				else
-				{
-					DHD_INFO(("%s: p2p_da_override succeeded\n", __FUNCTION__));
-				}
-			}
-#endif
 			return ret;
 		}
 	} else {
@@ -3477,14 +3430,14 @@
 	//bill.jung@lge.com - For config file setup
 	uint32 dongle_align = DHD_SDALIGN;
 	uint32 glom = 0;
-	uint bcn_timeout = 8;  // for CCX
+	uint bcn_timeout = 4;
 	uint retry_max = 3;
 #if defined(ARP_OFFLOAD_SUPPORT)
 	int arpoe = 1;
 #endif
-	int scan_assoc_time = 5; //DHD_SCAN_ACTIVE_TIME;   // for CCX
+	int scan_assoc_time = DHD_SCAN_ACTIVE_TIME;
 	int scan_unassoc_time = 40;
-	int scan_passive_time = 50; //DHD_SCAN_PASSIVE_TIME;   // for CCX
+	int scan_passive_time = DHD_SCAN_PASSIVE_TIME;
 	char buf[WLC_IOCTL_SMLEN];
 	char *ptr;
 	uint32 listen_interval = LISTEN_INTERVAL; /* Default Listen Interval in Beacons */
@@ -3727,10 +3680,7 @@
 	setbit(eventmask, WLC_E_PFN_NET_FOUND);
 #endif /* PNO_SUPPORT */
 	/* enable dongle roaming event */
-	setbit(eventmask, WLC_E_ROAM_START);   // for CCX
-	setbit(eventmask, WLC_E_ROAM_PREP);    // for CCX
 	setbit(eventmask, WLC_E_ROAM);
-	setbit(eventmask, WLC_E_TRACE);        // for CCX
 #ifdef WL_CFG80211
 	setbit(eventmask, WLC_E_ESCAN_RESULT);
 	if ((dhd->op_mode & WFD_MASK) == WFD_MASK) {
@@ -3773,19 +3723,12 @@
 
 #ifdef PKT_FILTER_SUPPORT
 	/* Setup defintions for pktfilter , enable in suspend */
-#ifdef CONFIG_COMMON_PATCH
-	dhd->pktfilter_count = 5;
-#else
 	dhd->pktfilter_count = 4;
-#endif
 	/* Setup filter to allow only unicast */
 	dhd->pktfilter[0] = "100 0 0 0 0x01 0x00";
 	dhd->pktfilter[1] = NULL;
 	dhd->pktfilter[2] = NULL;
 	dhd->pktfilter[3] = NULL;
-#ifdef CONFIG_COMMON_PATCH
-	dhd->pktfilter[4] = "104 0 0 0 0xFFFFFF 0x01005E";
-#endif
 #if defined(SOFTAP)
 	if (ap_fw_loaded) {
 		int i;
@@ -4314,10 +4257,7 @@
 {
 	int error = 0;
 
-/* LGE_UPDATE_S, moon-wifi@lge.com by 2lee, 20120601, Prevent kernel panic while a wifi driver module is loading.*/
-//#if 1 && defined(BCMLXSDMMC) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
-#if !defined(CONFIG_COMMON_PATCH) && 1 && defined(BCMLXSDMMC) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
-/* LGE_UPDATE_E, moon-wifi@lge.com by 2lee, 20120601 */
+#if 1 && defined(BCMLXSDMMC) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
 	int retry = POWERUP_MAX_RETRY;
 	int chip_up = 0;
 #endif 
@@ -4342,10 +4282,7 @@
 	} while (0);
 #endif 
 
-/* LGE_UPDATE_S, moon-wifi@lge.com by 2lee, 20120601, Prevent kernel panic while a wifi driver module is loading.*/
-//#if 1 && defined(BCMLXSDMMC) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
-#if !defined(CONFIG_COMMON_PATCH) && 1 && defined(BCMLXSDMMC) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
-/* LGE_UPDATE_E, moon-wifi@lge.com by 2lee, 20120601 */
+#if 1 && defined(BCMLXSDMMC) && (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 27))
 	do {
 		sema_init(&dhd_chipup_sem, 0);
 		dhd_bus_reg_sdio_notify(&dhd_chipup_sem);
